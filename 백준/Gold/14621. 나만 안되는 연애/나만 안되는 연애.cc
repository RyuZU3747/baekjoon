/*
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣤⣶⣶⣶⣶⣶⣶⣿⣿⣶⣶⣶⣶⣶⣤⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣶⡿⠿⠿⠛⠋⠉⠉⠀⠀⠀⠀⠀⠀⠀⠉⠉⠙⠛⠿⠿⣷⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠻⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⡶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣾⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⢦⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣶⣶⡿⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⡿⠁⠀⠀⠀⠀⠀⠀⢀⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⣷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⡿⠿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣴⣿⡿⠁⠀⠀⠀⠀⠀⠀⢠⣾⢋⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣾⣿⠟⠋⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣶⡿⠋⣹⣿⠁⠀⠀⠀⠀⠀⠀⢀⣿⠃⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣠⣴⣿⠿⠋⢁⣠⣴⠟⠁⠀⠀⢀⣴⠏⠀⢀⣴⣿⠟⠉⠀⠀⣿⡏⠀⠀⠀⠀⠀⠀⢀⣾⡏⠀⠈⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢀⣾⣿⠟⠁⠀⣰⣿⡟⠁⠀⠀⠀⢠⣾⠏⢀⣴⡿⠛⠁⠀⠀⠀⠀⣿⡇⠀⠀⠀⢠⡆⠀⣾⣿⠁⠀⠀⠘⣿⣷⡀⠀⠀⠀⠀⠀⠀⣾⠀⠀⠀⠀⠀⣸⣿⣶⣄⠀⠀⠀⢿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣴⣿⡿⠁⣠⣶⣾⣿⠏⠀⠀⠀⠀⢠⣿⣃⣤⣿⣿⣷⣶⣶⣄⠀⠀⠀⢻⣿⡄⠀⠀⣿⡇⢰⡿⠁⠀⠀⠀⠀⠘⢿⣿⣦⡀⠀⠀⠀⠀⢻⣆⠀⠀⠀⠀⣿⡟⠉⢿⣷⡄⠀⠘⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢀⣼⣿⠏⣠⣾⣿⣿⡿⠁⠀⠀⠀⠀⣠⣾⣿⡿⠛⠉⣁⣀⣉⣉⣛⣷⠀⠀⠘⣿⣷⡀⠀⢿⣿⣸⠇⠀⠀⠀⠀⠀⠐⠦⣭⣿⣿⣷⣤⣀⡀⠈⣿⣦⠀⠀⠀⣿⡇⠀⠀⢻⣷⡀⠀⣿⣇⣠⣤⣄⠀⠀⠀⠀⠀⠀⠀
⠀⣼⣿⠋⣼⣿⠏⣸⣿⡇⠀⠀⠀⢀⣼⣿⠏⠁⢀⣴⡿⠟⠉⠙⠛⠻⢿⣶⡀⠀⠈⢿⣿⣄⠘⣿⣏⠀⠀⠀⣀⣤⣶⣦⣤⣄⡉⠛⠿⣿⣿⣿⣦⣼⣿⣷⡄⠀⣿⡇⠀⠀⠈⣿⣇⠀⣼⣿⠿⢻⣿⡇⠀⠀⠀⠀⠀⠀
⢰⣿⣿⣼⣿⠋⠀⣿⣿⠀⠀⠀⠀⣾⡿⠁⢀⣴⣿⠟⠁⠀⠀⠀⠀⠀⠘⣿⣧⠀⠀⠀⠙⠻⢷⣿⣿⣦⢀⣾⡿⠛⠁⠀⠈⠛⠿⣷⣦⡀⠉⠻⢿⣿⣟⣻⣿⣦⣿⣷⠀⠀⢰⣿⣿⣿⠟⠁⠀⣼⣿⠃⠀⠀⠀⠀⠀⠀
⠸⣿⣿⣿⡏⠀⠀⣿⣿⠀⠀⠀⢰⣿⠁⠀⢸⣿⠃⠀⠀⠀⠀⠀⠀⠀⢰⣿⡟⠀⠀⠀⠀⠀⠀⠈⠉⠙⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠙⣿⣦⠀⠀⠙⢿⣿⣿⣿⢿⣿⣆⣠⣾⣿⣿⣿⡀⢀⣼⣿⡏⠀⠀⠀⠀⠀⠀⠀
⠀⠹⣿⣿⣇⠀⠀⢻⣿⡆⠀⠀⣼⡿⠆⠀⣿⣿⠀⠀⠀⠀⠀⢀⣠⣶⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣷⠀⠀⠀⠙⢿⣿⣮⡿⣿⣿⣿⠁⢸⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠙⠿⣿⣄⠀⠈⠻⣿⣄⣼⡿⠀⠀⠀⠘⢿⣷⣶⣴⣶⣶⡿⠿⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣷⣀⠀⠀⠀⠀⠀⠀⠀⠀⣽⣿⠇⠀⠀⠀⢸⣿⢿⣷⣼⣿⠇⠀⠀⠹⣯⡉⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠈⠉⠁⠀⠀⢈⣿⣿⠃⠀⠀⠀⠀⠀⠈⠉⠉⠁⠀⠀⠀⣀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣿⣶⣶⣤⣤⣴⣶⣾⡿⠏⠀⠀⠀⠀⢸⣿⠀⢹⣿⡏⠀⠀⠀⠀⠸⣿⣆⠀⠀⣿⡆⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⠃⠀⠀⠀⠀⠀⢀⣠⣤⣤⠶⠖⠚⠛⠋⠉⠛⠛⠛⠛⠻⢿⣷⣦⣤⣀⠀⠀⠀⠀⠀⠈⠉⠛⠛⠛⠛⠋⠉⠀⠀⠀⠀⠀⢀⣿⡟⠀⢸⣿⣦⣄⠀⠀⠀⠀⢻⣿⡀⠀⢻⣿⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⠀⠀⠀⠀⢀⣴⣿⡿⠋⠁⠀⠐⠀⠀⠀⣤⡀⠀⠻⠀⠀⠀⠈⠉⠻⢿⣷⣦⡀⠀⠀⠀⠀⠀⠀⠈⠛⠶⢦⣤⡤⠄⠀⢀⣾⡿⠁⠀⠘⠋⠻⣿⣖⢶⣆⠀⢸⣿⠇⠀⠈⣿⣧⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣴⠜⢿⣷⣄⠀⣴⣿⡟⠉⠀⠀⠀⠀⠀⠀⠀⠈⠿⠅⠀⠀⠀⠀⠀⠀⠀⠀⣀⣉⣻⣿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣿⠟⠁⠀⠀⠀⠀⠀⠙⠛⠉⠉⠀⣾⠟⠀⠀⠀⠈⣿⣷⣄⠀⠀
⠀⠀⠀⠀⠀⠀⣰⣿⠏⠀⠀⠉⠉⣻⣿⣿⣈⣀⣀⣀⣀⣀⣠⣤⣤⣤⣤⣤⣴⣦⣶⣶⣶⣶⡾⠿⢿⣿⠛⠻⢿⣿⣆⠀⠠⣤⣀⣤⣤⣤⣶⣿⠿⠛⢁⣀⣠⣤⠴⠒⠀⠊⠉⠙⠦⣄⠀⠀⠀⠀⠀⡀⠀⠈⠿⣿⣆⠀
⠀⠀⠀⠀⢀⣾⡿⠁⠀⠀⢠⣶⣿⣿⡿⠟⣿⡿⠛⠛⣿⣿⣿⡉⠉⠁⢰⣦⡄⠀⠀⠀⠈⣯⣤⣴⠾⢿⣿⣶⣴⣿⣿⡄⠀⠈⠛⠻⣿⣿⣿⣿⣿⣿⠿⠿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠘⢦⡀⠀⠀⠀⣿⡄⠀⠀⠹⣿⡄
⠀⠀⠀⢠⣿⡿⠁⠀⠀⢠⣿⣿⣿⠋⠀⠀⢸⣿⣄⢰⣿⡇⠙⠿⢷⣦⣼⣿⣿⣦⣴⡾⣿⡟⠋⠁⠀⠀⠉⠉⢻⡆⢹⡷⠒⢿⣿⡿⠿⠓⣶⣤⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⡄⠀⠀⠹⣿⡄⠀⠀⢹⣿
⠀⠀⢠⣿⡟⠁⠀⠀⣰⡏⣿⡿⣁⣀⣴⣾⣦⠙⢿⣿⣿⣷⠀⢴⣶⡄⠙⢿⣿⣿⢿⣿⣿⠟⠀⠀⠀⠀⠀⠀⣼⠀⠀⣇⣴⡿⠋⠀⢀⣴⣿⠟⢻⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⠀⠀⠀⢻⣿⣦⡀⠈⣿
⠀⢠⣿⡟⠁⠀⣠⣾⣿⠀⠛⠟⣿⡿⠋⠈⠉⠀⠀⠈⠉⠀⠀⠀⠉⠀⠀⢀⣼⡿⠀⠀⠀⢀⣄⠀⠀⠀⠀⠀⢾⠇⠀⣿⡋⠀⠀⣴⣿⡟⠁⠀⠀⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠆⠀⠀⠘⣿⣿⣷⡀⢸
⠀⣾⣿⠀⢀⣾⣿⣿⠇⠀⠀⠀⣿⣧⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠿⠿⠷⠾⠿⣿⣿⣟⣠⣴⣶⣶⣦⣴⠄⢘⣿⣷⣖⣼⣿⠏⠀⠀⠀⠀⠹⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡏⣿⡇⠈
⢸⣿⡏⣰⣿⡏⢸⡿⠀⠀⢀⣿⠏⠛⠻⠿⢿⣷⣶⣤⣤⣤⣤⠀⠀⠀⠀⠀⣀⣤⠶⠶⠾⠿⣿⣿⣿⡿⠟⠿⢷⣤⣿⠋⠻⣿⣿⠇⠀⠀⠀⠀⠀⠀⢻⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠇⢸⡇⠀
⣿⣿⢡⣿⠟⠀⣿⡇⠀⠀⠸⣿⣤⣤⣤⣶⠾⠛⠉⠉⠉⠁⣾⣦⣤⣤⡶⠟⠛⠁⠀⠀⣠⣿⣿⠟⠁⠀⠀⠀⠀⠙⢿⠀⠀⠈⡁⠀⠀⠀⠀⠀⠀⠀⠈⢿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡿⠀⠸⠇⠀
⣿⣿⣾⡟⠀⠀⢿⣧⠀⠀⠀⢠⣶⠾⣿⣿⣦⣄⠀⠀⠀⠀⠘⠛⠉⠁⠀⢀⣠⣤⣶⣾⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠘⣧⠀⠀⣿⡄⠀⠀⠀⠀⠀⠀⠀⠘⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⠟⠀⠀⠀⠀⠀
⢹⣿⣿⡇⠀⠀⠘⢿⣦⡀⠀⣾⣿⠀⠈⠉⠛⠿⣿⣶⣶⣶⣶⣶⣶⣶⣶⠿⠋⠀⠀⠁⣿⣏⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣇⠀⢿⣷⠀⠀⠀⣀⣠⣤⣴⣦⢼⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣿⠟⠁⠀⠀⠀⠀⠀⠀
⠀⢻⣿⣷⣄⠀⠀⠈⠙⠳⠀⠹⣿⣦⣀⡀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⢻⣿⣤⡀⠀⠀⠀⠀⠀⢀⡼⠟⠻⢷⣿⣿⣿⣿⠿⠿⠛⠋⣹⣧⠀⠻⣿⡇⠀⠀⠀⣀⣀⣴⣾⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠉⠛⠿⠷⠶⠀⠀⠀⠀⠀⠉⠛⠻⠿⠟⠛⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠿⣿⣿⣶⣶⣤⠶⠏⠀⠀⠀⠀⠿⠁⠀⠀⠀⠀⠀⢀⣿⣿⠀⠀⠈⠑⠶⠛⠛⠋⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
*/
#include <bits/stdc++.h>
#define ll long long int
#define MOD 998244353
#define pii pair<int,int>
#define iii tuple<int,int,int>
#define FASTIO cin.tie(0),ios_base::sync_with_stdio(0)
using namespace std;

int root[1001];

int find(int x){
    return root[x] = root[x] == x ? x : find(root[x]);
}

void Union(int x, int y){
    int fx = find(x);
    int fy = find(y);
    if(fx>fy) root[fx]=root[fy];
    else root[fy]=root[fx];
    return;
}


int main(){
    FASTIO;
    for(int i=0;i<1001;i++){
        root[i]=i;
    }
    int n,m;cin>>n>>m;
    int s[1001];
    for(int i=1;i<=n;i++){
        char a;cin>>a;
        if(a=='M') s[i] = 1;
        else s[i] = 0;
    }
    vector<array<int,3>> graph;
    for(int i=0;i<m;i++){
        int a,b,c;cin>>a>>b>>c;
        graph.push_back({c,a,b});
        graph.push_back({c,b,a});
    }
    sort(graph.begin(),graph.end());
    int ans = 0;
    for(auto [cos, fro, to]: graph){
        if(s[fro] == s[to]) continue;
        if(find(fro) != find(to)){
            Union(fro,to);
            ans += cos;
        }
    }
    int o = find(1);
    for(int i=2;i<=n;i++){
        if(o!=find(i)){
            cout<<-1;
            return 0;
        }
    }
    cout<<ans;
}
