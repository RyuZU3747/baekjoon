/*
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⣤⣶⣶⣶⣶⣶⣶⣿⣿⣶⣶⣶⣶⣶⣤⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣶⡿⠿⠿⠛⠋⠉⠉⠀⠀⠀⠀⠀⠀⠀⠉⠉⠙⠛⠿⠿⣷⣦⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⡿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠛⠻⢦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⡶⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣾⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⢦⣄⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣶⣶⡿⠋⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⡿⠁⠀⠀⠀⠀⠀⠀⢀⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⣷⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣾⡿⠿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣴⣿⡿⠁⠀⠀⠀⠀⠀⠀⢠⣾⢋⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣦⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣾⣿⠟⠋⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣶⡿⠋⣹⣿⠁⠀⠀⠀⠀⠀⠀⢀⣿⠃⢸⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⣠⣴⣿⠿⠋⢁⣠⣴⠟⠁⠀⠀⢀⣴⠏⠀⢀⣴⣿⠟⠉⠀⠀⣿⡏⠀⠀⠀⠀⠀⠀⢀⣾⡏⠀⠈⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢻⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢀⣾⣿⠟⠁⠀⣰⣿⡟⠁⠀⠀⠀⢠⣾⠏⢀⣴⡿⠛⠁⠀⠀⠀⠀⣿⡇⠀⠀⠀⢠⡆⠀⣾⣿⠁⠀⠀⠘⣿⣷⡀⠀⠀⠀⠀⠀⠀⣾⠀⠀⠀⠀⠀⣸⣿⣶⣄⠀⠀⠀⢿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⣴⣿⡿⠁⣠⣶⣾⣿⠏⠀⠀⠀⠀⢠⣿⣃⣤⣿⣿⣷⣶⣶⣄⠀⠀⠀⢻⣿⡄⠀⠀⣿⡇⢰⡿⠁⠀⠀⠀⠀⠘⢿⣿⣦⡀⠀⠀⠀⠀⢻⣆⠀⠀⠀⠀⣿⡟⠉⢿⣷⡄⠀⠘⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⢀⣼⣿⠏⣠⣾⣿⣿⡿⠁⠀⠀⠀⠀⣠⣾⣿⡿⠛⠉⣁⣀⣉⣉⣛⣷⠀⠀⠘⣿⣷⡀⠀⢿⣿⣸⠇⠀⠀⠀⠀⠀⠐⠦⣭⣿⣿⣷⣤⣀⡀⠈⣿⣦⠀⠀⠀⣿⡇⠀⠀⢻⣷⡀⠀⣿⣇⣠⣤⣄⠀⠀⠀⠀⠀⠀⠀
⠀⣼⣿⠋⣼⣿⠏⣸⣿⡇⠀⠀⠀⢀⣼⣿⠏⠁⢀⣴⡿⠟⠉⠙⠛⠻⢿⣶⡀⠀⠈⢿⣿⣄⠘⣿⣏⠀⠀⠀⣀⣤⣶⣦⣤⣄⡉⠛⠿⣿⣿⣿⣦⣼⣿⣷⡄⠀⣿⡇⠀⠀⠈⣿⣇⠀⣼⣿⠿⢻⣿⡇⠀⠀⠀⠀⠀⠀
⢰⣿⣿⣼⣿⠋⠀⣿⣿⠀⠀⠀⠀⣾⡿⠁⢀⣴⣿⠟⠁⠀⠀⠀⠀⠀⠘⣿⣧⠀⠀⠀⠙⠻⢷⣿⣿⣦⢀⣾⡿⠛⠁⠀⠈⠛⠿⣷⣦⡀⠉⠻⢿⣿⣟⣻⣿⣦⣿⣷⠀⠀⢰⣿⣿⣿⠟⠁⠀⣼⣿⠃⠀⠀⠀⠀⠀⠀
⠸⣿⣿⣿⡏⠀⠀⣿⣿⠀⠀⠀⢰⣿⠁⠀⢸⣿⠃⠀⠀⠀⠀⠀⠀⠀⢰⣿⡟⠀⠀⠀⠀⠀⠀⠈⠉⠙⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠙⣿⣦⠀⠀⠙⢿⣿⣿⣿⢿⣿⣆⣠⣾⣿⣿⣿⡀⢀⣼⣿⡏⠀⠀⠀⠀⠀⠀⠀
⠀⠹⣿⣿⣇⠀⠀⢻⣿⡆⠀⠀⣼⡿⠆⠀⣿⣿⠀⠀⠀⠀⠀⢀⣠⣶⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠘⣿⣷⠀⠀⠀⠙⢿⣿⣮⡿⣿⣿⣿⠁⢸⣿⣿⣿⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠙⠿⣿⣄⠀⠈⠻⣿⣄⣼⡿⠀⠀⠀⠘⢿⣷⣶⣴⣶⣶⡿⠿⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣷⣀⠀⠀⠀⠀⠀⠀⠀⠀⣽⣿⠇⠀⠀⠀⢸⣿⢿⣷⣼⣿⠇⠀⠀⠹⣯⡉⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠈⠉⠁⠀⠀⢈⣿⣿⠃⠀⠀⠀⠀⠀⠈⠉⠉⠁⠀⠀⠀⣀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣿⣶⣶⣤⣤⣴⣶⣾⡿⠏⠀⠀⠀⠀⢸⣿⠀⢹⣿⡏⠀⠀⠀⠀⠸⣿⣆⠀⠀⣿⡆⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⠃⠀⠀⠀⠀⠀⢀⣠⣤⣤⠶⠖⠚⠛⠋⠉⠛⠛⠛⠛⠻⢿⣷⣦⣤⣀⠀⠀⠀⠀⠀⠈⠉⠛⠛⠛⠛⠋⠉⠀⠀⠀⠀⠀⢀⣿⡟⠀⢸⣿⣦⣄⠀⠀⠀⠀⢻⣿⡀⠀⢻⣿⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⠀⠀⠀⠀⢀⣴⣿⡿⠋⠁⠀⠐⠀⠀⠀⣤⡀⠀⠻⠀⠀⠀⠈⠉⠻⢿⣷⣦⡀⠀⠀⠀⠀⠀⠀⠈⠛⠶⢦⣤⡤⠄⠀⢀⣾⡿⠁⠀⠘⠋⠻⣿⣖⢶⣆⠀⢸⣿⠇⠀⠈⣿⣧⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⣴⠜⢿⣷⣄⠀⣴⣿⡟⠉⠀⠀⠀⠀⠀⠀⠀⠈⠿⠅⠀⠀⠀⠀⠀⠀⠀⠀⣀⣉⣻⣿⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⣴⣿⠟⠁⠀⠀⠀⠀⠀⠙⠛⠉⠉⠀⣾⠟⠀⠀⠀⠈⣿⣷⣄⠀⠀
⠀⠀⠀⠀⠀⠀⣰⣿⠏⠀⠀⠉⠉⣻⣿⣿⣈⣀⣀⣀⣀⣀⣠⣤⣤⣤⣤⣤⣴⣦⣶⣶⣶⣶⡾⠿⢿⣿⠛⠻⢿⣿⣆⠀⠠⣤⣀⣤⣤⣤⣶⣿⠿⠛⢁⣀⣠⣤⠴⠒⠀⠊⠉⠙⠦⣄⠀⠀⠀⠀⠀⡀⠀⠈⠿⣿⣆⠀
⠀⠀⠀⠀⢀⣾⡿⠁⠀⠀⢠⣶⣿⣿⡿⠟⣿⡿⠛⠛⣿⣿⣿⡉⠉⠁⢰⣦⡄⠀⠀⠀⠈⣯⣤⣴⠾⢿⣿⣶⣴⣿⣿⡄⠀⠈⠛⠻⣿⣿⣿⣿⣿⣿⠿⠿⠋⠁⠀⠀⠀⠀⠀⠀⠀⠘⢦⡀⠀⠀⠀⣿⡄⠀⠀⠹⣿⡄
⠀⠀⠀⢠⣿⡿⠁⠀⠀⢠⣿⣿⣿⠋⠀⠀⢸⣿⣄⢰⣿⡇⠙⠿⢷⣦⣼⣿⣿⣦⣴⡾⣿⡟⠋⠁⠀⠀⠉⠉⢻⡆⢹⡷⠒⢿⣿⡿⠿⠓⣶⣤⣤⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢷⡄⠀⠀⠹⣿⡄⠀⠀⢹⣿
⠀⠀⢠⣿⡟⠁⠀⠀⣰⡏⣿⡿⣁⣀⣴⣾⣦⠙⢿⣿⣿⣷⠀⢴⣶⡄⠙⢿⣿⣿⢿⣿⣿⠟⠀⠀⠀⠀⠀⠀⣼⠀⠀⣇⣴⡿⠋⠀⢀⣴⣿⠟⢻⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢳⠀⠀⠀⢻⣿⣦⡀⠈⣿
⠀⢠⣿⡟⠁⠀⣠⣾⣿⠀⠛⠟⣿⡿⠋⠈⠉⠀⠀⠈⠉⠀⠀⠀⠉⠀⠀⢀⣼⡿⠀⠀⠀⢀⣄⠀⠀⠀⠀⠀⢾⠇⠀⣿⡋⠀⠀⣴⣿⡟⠁⠀⠀⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠆⠀⠀⠘⣿⣿⣷⡀⢸
⠀⣾⣿⠀⢀⣾⣿⣿⠇⠀⠀⠀⣿⣧⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠐⠿⠿⠷⠾⠿⣿⣿⣟⣠⣴⣶⣶⣦⣴⠄⢘⣿⣷⣖⣼⣿⠏⠀⠀⠀⠀⠹⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⡏⣿⡇⠈
⢸⣿⡏⣰⣿⡏⢸⡿⠀⠀⢀⣿⠏⠛⠻⠿⢿⣷⣶⣤⣤⣤⣤⠀⠀⠀⠀⠀⣀⣤⠶⠶⠾⠿⣿⣿⣿⡿⠟⠿⢷⣤⣿⠋⠻⣿⣿⠇⠀⠀⠀⠀⠀⠀⢻⣿⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣿⠇⢸⡇⠀
⣿⣿⢡⣿⠟⠀⣿⡇⠀⠀⠸⣿⣤⣤⣤⣶⠾⠛⠉⠉⠉⠁⣾⣦⣤⣤⡶⠟⠛⠁⠀⠀⣠⣿⣿⠟⠁⠀⠀⠀⠀⠙⢿⠀⠀⠈⡁⠀⠀⠀⠀⠀⠀⠀⠈⢿⣷⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣾⡿⠀⠸⠇⠀
⣿⣿⣾⡟⠀⠀⢿⣧⠀⠀⠀⢠⣶⠾⣿⣿⣦⣄⠀⠀⠀⠀⠘⠛⠉⠁⠀⢀⣠⣤⣶⣾⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⠘⣧⠀⠀⣿⡄⠀⠀⠀⠀⠀⠀⠀⠘⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣴⣿⠟⠀⠀⠀⠀⠀
⢹⣿⣿⡇⠀⠀⠘⢿⣦⡀⠀⣾⣿⠀⠈⠉⠛⠿⣿⣶⣶⣶⣶⣶⣶⣶⣶⠿⠋⠀⠀⠁⣿⣏⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣇⠀⢿⣷⠀⠀⠀⣀⣠⣤⣴⣦⢼⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⣀⣴⣿⠟⠁⠀⠀⠀⠀⠀⠀
⠀⢻⣿⣷⣄⠀⠀⠈⠙⠳⠀⠹⣿⣦⣀⡀⠀⠀⠀⠈⠉⠉⠉⠉⠉⠀⠀⠀⠀⠀⠀⠀⢻⣿⣤⡀⠀⠀⠀⠀⠀⢀⡼⠟⠻⢷⣿⣿⣿⣿⠿⠿⠛⠋⣹⣧⠀⠻⣿⡇⠀⠀⠀⣀⣀⣴⣾⠿⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠉⠛⠿⠷⠶⠀⠀⠀⠀⠀⠉⠛⠻⠿⠟⠛⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⠿⣿⣿⣶⣶⣤⠶⠏⠀⠀⠀⠀⠿⠁⠀⠀⠀⠀⠀⢀⣿⣿⠀⠀⠈⠑⠶⠛⠛⠋⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢰⡿⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
*/
#include <bits/stdc++.h>
#define ll long long int
#define MOD 998244353
#define pii pair<int,int>
#define iii tuple<int,int,int>
#define FASTIO cin.tie(0),ios_base::sync_with_stdio(0)
using namespace std;

pii mp[25][25];
vector<int> cnt[25][25];
int dr[5] = {0, -1, 1, 0, 0};
int dc[5] = {0, 0, 0, -1, 1};

struct shark{
    int alive = 1;
    int r;
    int c;
    int dir;
    vector<int> prio[5];
};

vector<shark> sharks(401);

int main(){
    int n,m,k;cin>>n>>m>>k;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=n;j++){
            int a;cin>>a;
            if(a!=0){
                sharks[a].r = i;
                sharks[a].c = j;
                mp[i][j].first = a;
                mp[i][j].second = k;
            }
        }
    }

    for(int i=1;i<=m;i++){
        cin>>sharks[i].dir;
        sharks[i].alive = 1;
    }

    for(int i=1;i<=m;i++){
        for(int j=1;j<=4;j++){
            for(int k=1;k<=4;k++){
                int a;cin>>a;
                sharks[i].prio[j].push_back(a);
            }
        }
    }

    int time = 0;
    while(time <= 1000){
        time++;
        for(int shnum=1;shnum<=m;shnum++){
            if(sharks[shnum].alive==0) continue;
            int curdir = sharks[shnum].dir;
            int mov = 0;
            for(auto nxtdir: sharks[shnum].prio[curdir]){
                int nr = sharks[shnum].r + dr[nxtdir];
                int nc = sharks[shnum].c + dc[nxtdir];
                if(nr>=1&&nr<=n&&nc>=1&&nc<=n&&mp[nr][nc].second==0){
                    mov = 1;
                    sharks[shnum].r = nr;
                    sharks[shnum].c = nc;
                    sharks[shnum].dir = nxtdir;
                    break;
                }
            }
            if(mov==0){
                for(auto nxtdir: sharks[shnum].prio[curdir]){
                    int nr = sharks[shnum].r + dr[nxtdir];
                    int nc = sharks[shnum].c + dc[nxtdir];
                    if(nr>=1&&nr<=n&&nc>=1&&nc<=n&&mp[nr][nc].first==shnum){
                        sharks[shnum].r = nr;
                        sharks[shnum].c = nc;
                        sharks[shnum].dir = nxtdir;
                        break;
                    }
                }
            }
            cnt[sharks[shnum].r][sharks[shnum].c].push_back(shnum);
        }
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n;j++){
                if(mp[i][j].second!=0) mp[i][j].second--;
            }
        }
        for(int i=m;i>0;i--){
            if(sharks[i].alive==0) continue;
            mp[sharks[i].r][sharks[i].c].first = i;
            mp[sharks[i].r][sharks[i].c].second = k;
        }
        //cout<<"==============\n";
        for(int i=1;i<=n;i++){
            for(int j=1;j<=n;j++){
                //cout<<"("<<mp[i][j].first<<' '<<mp[i][j].second<<") ";
                //cout<<cnt[i][j].size()<<' ';
                for(int k=1;k<cnt[i][j].size();k++){
                    sharks[cnt[i][j][k]].alive = 0;
                }
                cnt[i][j].clear();
            }
            //cout<<'\n';
        }
        int alivesu = 0;
        for(int i=1;i<=m;i++){
            if(sharks[i].alive == 1) alivesu++;
        }
        //cout<<alivesu<<'\n';
        if(alivesu == 1) break;
    }
    
    if(time>1000) cout<<-1;
    else cout<<time;
}